#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75>;
        };

        td_quote: td_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp LS(SQT)>;
        };

        td_backspace: td_backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LA(BACKSPACE)>;

            tapping-term-ms = <300>;
        };

        layer_kp: layer_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <65>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <180>;
        };

        td_bslash: td_bslash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BSLASH";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp BACKSLASH>, <&kp LS(BACKSLASH)>;
        };

        td_dash: td_dash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DASH";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp MINUS>, <&kp LS(MINUS)>;
        };

        bs_cmdbs: bs_cmdbs {
            compatible = "zmk,behavior-tap-dance";
            label = "BS_CMDBS";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp LG(BACKSPACE)>;
        };

        td_colon: td_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp COLON>;

            tapping-term-ms = <180>;
        };

        td_slash: td_slash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SLASH";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp SLASH>, <&kp QUESTION>;
        };

        mm_vima: mm_vima {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_VIMA";
            bindings = <&kp A>;
            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
            keep-mods = <(MOD_LCTL)>;
        };

        mm_cleft: mm_cleft {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_CLEFT";
            bindings = <&kp LEFT_ARROW>, <&none>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        mm_cright: mm_cright {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_CRIGHT";
            bindings = <&kp RIGHT_ARROW>, <&none>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        sleep {
            bindings = <&kp LG(LA(K_SLEEP))>;
            key-positions = <67 68>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <17 24>;
        };

        underscore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <18 23>;
        };

        lshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <29 30>;
        };

        rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <44 43>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&none           &none             &none         &none   &none      &none  &trans                                                                                     &none           &none  &none     &none      &none          &none              &none
&kp TAB         &kp Q             &kp W         &kp F   &kp P      &kp B  &none                                                                                      &none           &kp J  &kp L     &kp U      &kp Y          &td_colon          &none
&kp CAPSLOCK    &kp A             &kp R         &kp S   &kp T      &kp G  &none           &kp LA(SPACE)      &kp TAB           &kp PAGE_UP    &none                  &none           &kp M  &kp N     &kp E      &kp I          &kp O              &none
&kp LEFT_SHIFT  &kp Z             &kp X         &kp C   &kp D      &kp V                                     &kp LEFT_GUI      &kp PAGE_DOWN                                         &kp K  &kp H     &kp COMMA  &kp PERIOD     &td_slash          &kp ENTER
&none           &kp LEFT_CONTROL  &kp LEFT_ALT  &trans  &kp GLOBE         &kp LEFT_SHIFT  &layer_kp 1 SPACE  &kp HOME          &kp END        &layer_kp 2 BACKSPACE  &kp LEFT_SHIFT         &td_dash  &none      &kp RIGHT_ALT  &kp RIGHT_CONTROL  &none
            >;
        };

        keypad {
            bindings = <
&none  &none           &none            &none                 &none                  &none        &trans                                         &none             &none           &none           &none         &none            &none      &none
&none  &kp EXCL        &kp AT_SIGN      &kp HASH              &kp DOLLAR             &kp PERCENT  &none                                          &none             &kp CARET       &kp AMPERSAND   &kp STAR      &kp GRAVE        &kp COLON  &none
&none  &none           &kp TILDE        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &td_bslash   &kp LESS_THAN  &none  &none      &none  &none  &kp GREATER_THAN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &td_quote  &none
&none  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none                              &none      &none                           &none           &none           &none         &none            &none      &none
&none  &none           &none            &none                 &trans                              &trans         &none  &none      &none  &mo 3  &none                             &kp TAB         &none         &none            &none      &none
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3      &kp F4  &kp F5  &kp F6  &none                                               &none      &kp F7           &kp F8           &kp F9           &kp F10          &kp F11  &kp F12
&trans  &trans  &trans      &trans  &trans  &trans  &none                                               &none      &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none    &trans
&trans  &trans  &td_bslash  &none   &none   &trans  &none   &trans  &trans      &trans  &kp KP_NUMLOCK  &kp EQUAL  &kp PLUS         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans   &trans
&trans  &none   &none       &none   &none   &none                   &trans      &trans                             &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans   &trans
&trans  &trans  &trans      &trans  &trans          &trans  &mo 3   &trans      &trans  &trans          &trans                      &td_dash         &kp PERIOD       &kp SLASH        &trans   &trans
            >;
        };

        mod {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                        &trans       &none     &none       &none         &none      &none  &none
&none       &none         &none         &none         &none         &none         &bootloader                                  &bootloader  &none     &none       &none         &none      &none  &none
&none       &none         &none         &none         &none         &none         &none        &none  &none      &none  &none  &none        &kp LEFT  &kp DOWN    &kp UP_ARROW  &kp RIGHT  &none  &none
&none       &none         &none         &none         &macro_ver    &none                             &none      &none                      &none     &none       &none         &none      &none  &none
&none       &none         &none         &none         &none                       &none        &none  &none      &none  &none  &trans                 &bl BL_INC  &bl BL_DEC    &none      &none  &none
            >;
        };
    };
};
